#!/bin/bash
if [ "x${SOS_ROOT}" == "x" ] ; then
  echo "Please set the SOS_ROOT environment variable."
  kill -INT $$
fi
if [ "x${SOS_WORK}" == "x" ] ; then
  echo "Please set the SOS_WORK environment variable."
  kill -INT $$
fi
if [ "x${SOS_CMD_PORT}" == "x" ] ; then
  echo "Please set the SOS_CMD_PORT environment variable."
  kill -INT $$
fi
if [ -z $1 ]; then echo ""; echo "*** Removing any files left by previous sosd daemons..."; echo ""; fi;
${SOS_ROOT}/src/mpi.cleanall
if [ -z $1 ]; then echo ""; echo "*** Launching the sosd daemons..."; echo ""; fi;

daemon0=" ${SOS_ROOT}/bin/sosd --role SOS_ROLE_DAEMON --port 22500 --buffer_len 8097152 --listen_backlog 10 --work_dir ${SOS_WORK} "
daemon1=" ${SOS_ROOT}/bin/sosd --role SOS_ROLE_DB     --port 22503 --buffer_len 8097152 --listen_backlog 10 --work_dir ${SOS_WORK} "

#surplus=""
surplus=" ${SOS_ROOT}/bin/sosd --role SOS_ROLE_DAEMON --port 22501 --buffer_len 8097152 --listen_backlog 10 --work_dir ${SOS_WORK} " 

echo ${daemon0}
echo ${daemon1}

valgrind_cmd=""
#valgrind_cmd="valgrind --tool=memcheck --leak-check=full --max-stackframe=3097792 --show-reachable=yes --error-limit=no --log-file=${SOS_WORK}/sosd.valgrind.log --show-leak-kinds=all --track-origins=yes --trace-children=yes "
#valgrind_cmd="valgrind --tool=memcheck --leak-check=full --track-origins=yes --trace-children=yes --log-file=${SOS_WORK}/sosd.valgrind.log "

if [ "x${valgrind_cmd}" == "x" ] ; then
  echo ""
else
    echo "VALGRIND:"
    echo "VALGRIND: Monitoring the SOSflow daemon.  Output file: sosd.valgrind.log"
    echo "VALGRIND:"
    echo "VALGRIND: valgrind_cmd = ${valgrind_cmd}"
    echo "VALGRIND:"
fi

echo "=========="
echo "Launch command:"
echo ""
echo "mpirun -np 1 ${valgrind_vmd} ${daemon0} : -np 1 ${daemon1}"
echo ""
echo "=========="
echo ""

if [ "x${surplus}" == "x" ] ; then
    mpirun -np 1 ${valgrind_cmd} ${daemon0} : -np 1 ${daemon1}
else
    mpirun -np 1 ${valgrind_cmd} ${daemon0} : -np 1 ${daemon1} : -np 1 ${surplus}
fi

