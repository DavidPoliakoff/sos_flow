#!/bin/bash 
##### the name of the batch job
#PBS -N sos_flow_3x12

##### this line tells Torque which queue to submit to
#PBS -q generic

##### requests 3 node and 12 processors per node
#PBS -l nodes=3:ppn=12

##### requests ____ hh:mm:ss time
#PBS -l walltime=06:00:00

##### the working directory for your job
#PBS -d /tmp

##### batch script output location
#PBS -o /home12/cdw/research/sos_flow/jobs/aciss/log

##### batch script errors location
#PBS -e /home12/cdw/research/sos_flow/jobs/aciss/log

# # # # # # #   modules   # # # # # # #

module load sqlite/3.8
module load gcc/4.9
#module load mpi/mpich-3.1_gcc-4.9
module load mpi-tor/openmpi-1.8_gcc-4.9

# # # # # # #   program   # # # # # # #

proj_path="/home12/cdw/research/sos_flow"
exec_path="${proj_path}"
#exec_path="/tmp"

#### sos: ##########

daemon0=" -npernode 1 ${proj_path}/bin/sosd --role SOS_ROLE_DAEMON --port ${SOS_CMD_PORT} --buffer_len 512000 --listen_backlog 10 --work_dir /tmp/sos_data"
db0="     -np  1 ${proj_path}/bin/sosd --role SOS_ROLE_DB     --port ${SOS_CMD_PORT} --buffer_len 512000 --listen_backlog 10 --work_dir /tmp/sos_data"

sosd_programs=""
sosd_programs="${sosd_programs} ${daemon0} : "
sosd_programs="${sosd_programs} ${db0}       "

sosd_mpi_opts=""

# ... OpenMPI stuff:
# ... sosd_mpi_opts="${sosd_mpi_opts} -rf ${proj_path}/jobs/aciss/3.rnk "
sosd_mpi_opts="${sosd_mpi_opts} --mca btl_tcp_if_include torbr "
sosd_mpi_opts="${sosd_mpi_opts} -report-bindings "

#### flow: ##########

flow_app="${proj_path}/bin/demo_app"
flow_app="${flow_app} --iteration_size 200"
flow_app="${flow_app} --max_send_count 3000000"
flow_app="${flow_app} --jitter 2.0"

flow_programs=""
flow_programs="${flow_programs} -npernode 8 ${flow_app} "

flow_mpi_opts=""
flow_mpi_opts="${flow_mpi_opts} "

#### finalize: ##########

stop_app="${proj_path}/bin/sosd_stop"

stop_programs=""
stop_programs="${stop_programs} -npernode 1 ${stop_app}"

stop_mpi_opts=""

#### setup/teardown: ##########

exec_init_mpi=""
exec_init_mpi="${exec_init_mpi} -npernode 1 bash ${proj_path}/jobs/aciss/init.sh"

tear_down_mpi=""
tear_down_mpi="${tear_down_mpi} -npernode 1 bash ${proj_path}/jobs/aciss/done.sh"


{
echo "-- SOSD command: -----"
echo ""
echo "mpirun ${sosd_mpi_opts} ${sosd_programs} &"
echo ""

echo "-- FLOW command: -----"
echo ""
echo "mpirun ${flow_mpi_opts} ${flow_programs}"
echo ""

echo "-- STOP command: -----"
echo ""
echo "mpirun ${stop_mpi_opts} ${stop_programs}"
echo ""

echo "-- INI/FIN commands: -----"
echo "mpirun ${exec_init_mpi}"
echo "mpirun ${tear_down_mpi}"



} &> commands.used


# # # # ---- run --- # # # #

echo ""
echo "Now executing..."
echo ""

#echo "[---] : Running setup script." >> launch.log
mpirun ${exec_init_mpi}

# -----

cd "${proj_path}/jobs/aciss/log"
touch launch.log
echo "[1/7] : Starting daemons." >> launch.log
mpirun ${sosd_mpi_opts} ${sosd_programs} &
echo "[2/7] : Waiting 4 seconds." >> launch.log
sleep 4
echo "[3/7] : Starting demo_app instances." >> launch.log

# -----

echo -n "        ...pass 1: " >> launch.log
mpirun ${flow_mpi_opts} ${flow_programs}
echo "complete" >> launch.log

#echo -n "        ...pass 2: " >> launch.log
#mpirun ${flow_mpi_opts} ${flow_programs}
#echo "complete" >> launch.log

#echo -n "        ...pass 3: " >> launch.log
#mpirun ${flow_mpi_opts} ${flow_programs}
#echo "complete" >> launch.log

# -----

echo "[4/7] : All demo_app instances are complete." >> launch.log
echo "[5/7] : Waiting 30 seconds before bringing daemons down." >> launch.log
sleep 30
echo "[6/7] : Starting the sosd_stop tool." >> launch.log
mpirun ${stop_mpi_opts} ${stop_programs}
echo "[7/7] : All tasks complete." >> launch.log
sleep 4

# -----

#echo "[---] : Running teardown script." >> launch.log
mpirun ${tear_down_mpi}

